name: Build
on:
  push:
    paths:
      - 'action-run/*'
    tags:
      - 'v*'
  workflow_dispatch:


jobs:
  docker:
    environment: Docker build
    runs-on: [self-hosted, linux, x64]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        run: |
          mkdir -p ./extras
      - name: Download application.yml
        run: |
          curl -o ./extras/application-ignore.yml ${{ vars.APPLICATION_YAML }}
      -
        name: "Download Latest Lavalink.jar"
        run: |
          echo "var- Branch: ${{ vars.UPSTREAM_REPO }}  Branch: ${{ vars.UPSTREAM_BRANCH }}  WF: ${{ vars.UPSTREAM_WF }} Artifact: ${{ vars.UPSTREAM_ARTIFACT }}"
          RUN_ID=`gh run --repo "${{ vars.UPSTREAM_REPO }}" list --branch "${{ vars.UPSTREAM_BRANCH }}" --workflow "${{ vars.UPSTREAM_WF }}" --json databaseId --jq .[0].databaseId`
          gh run --repo "${{ vars.UPSTREAM_REPO }}" download $RUN_ID -n "${{ vars.UPSTREAM_ARTIFACT }}" --dir ./extras
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            drapersniper/node
            ghcr.io/pylav/node
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: |
            linux/amd64
            linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
